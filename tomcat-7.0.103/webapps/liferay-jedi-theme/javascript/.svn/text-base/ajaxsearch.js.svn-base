$(function() {
	var tags = [ "" ], lastTerm = "", minlength = 3;
	$suche = $("#suche");
	$input = $("#suche input");
	$social = $("#social");

	// initialize autocomplete
	$input.autocomplete({
		source : tags,
		minLength : minlength,
		delay: 250,
		appendTo: "#suche",
		select: function(event, ui) {
            $input.val(ui.item.value);
			$suche.find("form").submit();
		}
	})
	// mark up search term in results
	.data("ui-autocomplete")._renderItem = function(ul, item) {
		var temp = item.label;
		// find search term case insensitive
		var termLength = lastTerm.length;
		var termBegin = temp.toLowerCase().indexOf(lastTerm.toLowerCase());
		var termEnd = termBegin + termLength;
		
		var markedResult = temp.slice(0, termBegin)
			+ "<span class='marked'>"
			+ temp.slice(termBegin, termEnd)
			+ "</span>"
			+ temp.slice (termEnd, temp.length);
		
		var $a = $("<a></a>").append(markedResult);
		return $("<li></li>").append($a).appendTo(ul);
	};

	// widen search box on focus with animation
	$input.on("focus", function () {
		$social.fadeOut(250, function () {
			$suche.addClass("wide", 500, "easeOutCubic", function () {
				$input.autocomplete("search");
			});
		});
	}).on("click", function (event) {
		event.stopPropagation();
	});
	
	// narrow search box on clicks outside of search box
	$("html").on("click", function () {
		$suche.removeClass("wide", 500, "easeOutCubic", function () {
			$social.fadeIn(250);
		});
	});
	
	// do ajax search on changed search term and minlength
	$input.keyup(function(event) {
		if (event.which == 38 || event.which == 40) {
			$suche.find("li.focus").removeClass("focus");
			$suche.find("li a.ui-state-focus").parent().addClass("focus");
		}else{
			var searchTerm = $input.val();
			if (searchTerm !== lastTerm && searchTerm.length >= minlength) {
				AutocompleteManager.getAutocompleteResults(searchTerm,
						handleAutocompleteResultChange);
				lastTerm = searchTerm;
			}
		}
	});

	// Reflect mouse over items of autocomplete list
	$("#suche").on("mouseover", "ul.ui-autocomplete li", function () {
		$suche.find("li.focus").removeClass("focus");
		$(this).addClass("focus");
	}).on("mouseout", "ul.ui-autocomplete li", function () {
		$(this).removeClass("focus");
	});
});

// show autocomplete results 
function handleAutocompleteResultChange(data) {
	$input.autocomplete("option", "source", data).autocomplete("search");
}




