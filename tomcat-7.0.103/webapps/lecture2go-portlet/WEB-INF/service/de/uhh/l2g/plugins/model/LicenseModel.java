/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.uhh.l2g.plugins.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the License service. Represents a row in the &quot;LG_License&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link de.uhh.l2g.plugins.model.impl.LicenseModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link de.uhh.l2g.plugins.model.impl.LicenseImpl}.
 * </p>
 *
 * @author Iavor Sturm
 * @see License
 * @see de.uhh.l2g.plugins.model.impl.LicenseImpl
 * @see de.uhh.l2g.plugins.model.impl.LicenseModelImpl
 * @generated
 */
public interface LicenseModel extends BaseModel<License> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a license model instance should use the {@link License} interface instead.
	 */

	/**
	 * Returns the primary key of this license.
	 *
	 * @return the primary key of this license
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this license.
	 *
	 * @param primaryKey the primary key of this license
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the license ID of this license.
	 *
	 * @return the license ID of this license
	 */
	public long getLicenseId();

	/**
	 * Sets the license ID of this license.
	 *
	 * @param licenseId the license ID of this license
	 */
	public void setLicenseId(long licenseId);

	/**
	 * Returns the full name of this license.
	 *
	 * @return the full name of this license
	 */
	@AutoEscape
	public String getFullName();

	/**
	 * Sets the full name of this license.
	 *
	 * @param fullName the full name of this license
	 */
	public void setFullName(String fullName);

	/**
	 * Returns the short identifier of this license.
	 *
	 * @return the short identifier of this license
	 */
	@AutoEscape
	public String getShortIdentifier();

	/**
	 * Sets the short identifier of this license.
	 *
	 * @param shortIdentifier the short identifier of this license
	 */
	public void setShortIdentifier(String shortIdentifier);

	/**
	 * Returns the url of this license.
	 *
	 * @return the url of this license
	 */
	@AutoEscape
	public String getUrl();

	/**
	 * Sets the url of this license.
	 *
	 * @param url the url of this license
	 */
	public void setUrl(String url);

	/**
	 * Returns the scheme name of this license.
	 *
	 * @return the scheme name of this license
	 */
	@AutoEscape
	public String getSchemeName();

	/**
	 * Sets the scheme name of this license.
	 *
	 * @param schemeName the scheme name of this license
	 */
	public void setSchemeName(String schemeName);

	/**
	 * Returns the scheme url of this license.
	 *
	 * @return the scheme url of this license
	 */
	@AutoEscape
	public String getSchemeUrl();

	/**
	 * Sets the scheme url of this license.
	 *
	 * @param schemeUrl the scheme url of this license
	 */
	public void setSchemeUrl(String schemeUrl);

	/**
	 * Returns the selectable of this license.
	 *
	 * @return the selectable of this license
	 */
	public boolean getSelectable();

	/**
	 * Returns <code>true</code> if this license is selectable.
	 *
	 * @return <code>true</code> if this license is selectable; <code>false</code> otherwise
	 */
	public boolean isSelectable();

	/**
	 * Sets whether this license is selectable.
	 *
	 * @param selectable the selectable of this license
	 */
	public void setSelectable(boolean selectable);

	/**
	 * Returns the description of this license.
	 *
	 * @return the description of this license
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this license.
	 *
	 * @param description the description of this license
	 */
	public void setDescription(String description);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(de.uhh.l2g.plugins.model.License license);

	@Override
	public int hashCode();

	@Override
	public CacheModel<de.uhh.l2g.plugins.model.License> toCacheModel();

	@Override
	public de.uhh.l2g.plugins.model.License toEscapedModel();

	@Override
	public de.uhh.l2g.plugins.model.License toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}