/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.uhh.l2g.plugins.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Metadata service. Represents a row in the &quot;LG_Metadata&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link de.uhh.l2g.plugins.model.impl.MetadataModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link de.uhh.l2g.plugins.model.impl.MetadataImpl}.
 * </p>
 *
 * @author Iavor Sturm
 * @see Metadata
 * @see de.uhh.l2g.plugins.model.impl.MetadataImpl
 * @see de.uhh.l2g.plugins.model.impl.MetadataModelImpl
 * @generated
 */
public interface MetadataModel extends BaseModel<Metadata> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a metadata model instance should use the {@link Metadata} interface instead.
	 */

	/**
	 * Returns the primary key of this metadata.
	 *
	 * @return the primary key of this metadata
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this metadata.
	 *
	 * @param primaryKey the primary key of this metadata
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the metadata ID of this metadata.
	 *
	 * @return the metadata ID of this metadata
	 */
	public long getMetadataId();

	/**
	 * Sets the metadata ID of this metadata.
	 *
	 * @param metadataId the metadata ID of this metadata
	 */
	public void setMetadataId(long metadataId);

	/**
	 * Returns the type of this metadata.
	 *
	 * @return the type of this metadata
	 */
	@AutoEscape
	public String getType();

	/**
	 * Sets the type of this metadata.
	 *
	 * @param type the type of this metadata
	 */
	public void setType(String type);

	/**
	 * Returns the language of this metadata.
	 *
	 * @return the language of this metadata
	 */
	@AutoEscape
	public String getLanguage();

	/**
	 * Sets the language of this metadata.
	 *
	 * @param language the language of this metadata
	 */
	public void setLanguage(String language);

	/**
	 * Returns the title of this metadata.
	 *
	 * @return the title of this metadata
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this metadata.
	 *
	 * @param title the title of this metadata
	 */
	public void setTitle(String title);

	/**
	 * Returns the subject of this metadata.
	 *
	 * @return the subject of this metadata
	 */
	@AutoEscape
	public String getSubject();

	/**
	 * Sets the subject of this metadata.
	 *
	 * @param subject the subject of this metadata
	 */
	public void setSubject(String subject);

	/**
	 * Returns the description of this metadata.
	 *
	 * @return the description of this metadata
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this metadata.
	 *
	 * @param description the description of this metadata
	 */
	public void setDescription(String description);

	/**
	 * Returns the publisher of this metadata.
	 *
	 * @return the publisher of this metadata
	 */
	@AutoEscape
	public String getPublisher();

	/**
	 * Sets the publisher of this metadata.
	 *
	 * @param publisher the publisher of this metadata
	 */
	public void setPublisher(String publisher);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(de.uhh.l2g.plugins.model.Metadata metadata);

	@Override
	public int hashCode();

	@Override
	public CacheModel<de.uhh.l2g.plugins.model.Metadata> toCacheModel();

	@Override
	public de.uhh.l2g.plugins.model.Metadata toEscapedModel();

	@Override
	public de.uhh.l2g.plugins.model.Metadata toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}