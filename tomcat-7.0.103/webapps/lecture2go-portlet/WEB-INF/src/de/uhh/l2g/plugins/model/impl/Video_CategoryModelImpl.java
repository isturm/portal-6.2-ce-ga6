/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.uhh.l2g.plugins.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.uhh.l2g.plugins.model.Video_Category;
import de.uhh.l2g.plugins.model.Video_CategoryModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Video_Category service. Represents a row in the &quot;LG_Video_Category&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.uhh.l2g.plugins.model.Video_CategoryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Video_CategoryImpl}.
 * </p>
 *
 * @author Iavor Sturm
 * @see Video_CategoryImpl
 * @see de.uhh.l2g.plugins.model.Video_Category
 * @see de.uhh.l2g.plugins.model.Video_CategoryModel
 * @generated
 */
public class Video_CategoryModelImpl extends BaseModelImpl<Video_Category>
	implements Video_CategoryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a video_ category model instance should use the {@link de.uhh.l2g.plugins.model.Video_Category} interface instead.
	 */
	public static final String TABLE_NAME = "LG_Video_Category";
	public static final Object[][] TABLE_COLUMNS = {
			{ "videoCategoryId", Types.BIGINT },
			{ "videoId", Types.BIGINT },
			{ "categoryId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table LG_Video_Category (videoCategoryId LONG not null primary key,videoId LONG,categoryId LONG)";
	public static final String TABLE_SQL_DROP = "drop table LG_Video_Category";
	public static final String ORDER_BY_JPQL = " ORDER BY video_Category.videoCategoryId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LG_Video_Category.videoCategoryId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.de.uhh.l2g.plugins.model.Video_Category"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.de.uhh.l2g.plugins.model.Video_Category"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.de.uhh.l2g.plugins.model.Video_Category"),
			true);
	public static long CATEGORYID_COLUMN_BITMASK = 1L;
	public static long VIDEOID_COLUMN_BITMASK = 2L;
	public static long VIDEOCATEGORYID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.de.uhh.l2g.plugins.model.Video_Category"));

	public Video_CategoryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _videoCategoryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setVideoCategoryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _videoCategoryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Video_Category.class;
	}

	@Override
	public String getModelClassName() {
		return Video_Category.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("videoCategoryId", getVideoCategoryId());
		attributes.put("videoId", getVideoId());
		attributes.put("categoryId", getCategoryId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long videoCategoryId = (Long)attributes.get("videoCategoryId");

		if (videoCategoryId != null) {
			setVideoCategoryId(videoCategoryId);
		}

		Long videoId = (Long)attributes.get("videoId");

		if (videoId != null) {
			setVideoId(videoId);
		}

		Long categoryId = (Long)attributes.get("categoryId");

		if (categoryId != null) {
			setCategoryId(categoryId);
		}
	}

	@Override
	public long getVideoCategoryId() {
		return _videoCategoryId;
	}

	@Override
	public void setVideoCategoryId(long videoCategoryId) {
		_videoCategoryId = videoCategoryId;
	}

	@Override
	public long getVideoId() {
		return _videoId;
	}

	@Override
	public void setVideoId(long videoId) {
		_columnBitmask |= VIDEOID_COLUMN_BITMASK;

		if (!_setOriginalVideoId) {
			_setOriginalVideoId = true;

			_originalVideoId = _videoId;
		}

		_videoId = videoId;
	}

	public long getOriginalVideoId() {
		return _originalVideoId;
	}

	@Override
	public long getCategoryId() {
		return _categoryId;
	}

	@Override
	public void setCategoryId(long categoryId) {
		_columnBitmask |= CATEGORYID_COLUMN_BITMASK;

		if (!_setOriginalCategoryId) {
			_setOriginalCategoryId = true;

			_originalCategoryId = _categoryId;
		}

		_categoryId = categoryId;
	}

	public long getOriginalCategoryId() {
		return _originalCategoryId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Video_Category.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Video_Category toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Video_Category)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		Video_CategoryImpl video_CategoryImpl = new Video_CategoryImpl();

		video_CategoryImpl.setVideoCategoryId(getVideoCategoryId());
		video_CategoryImpl.setVideoId(getVideoId());
		video_CategoryImpl.setCategoryId(getCategoryId());

		video_CategoryImpl.resetOriginalValues();

		return video_CategoryImpl;
	}

	@Override
	public int compareTo(Video_Category video_Category) {
		long primaryKey = video_Category.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Video_Category)) {
			return false;
		}

		Video_Category video_Category = (Video_Category)obj;

		long primaryKey = video_Category.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		Video_CategoryModelImpl video_CategoryModelImpl = this;

		video_CategoryModelImpl._originalVideoId = video_CategoryModelImpl._videoId;

		video_CategoryModelImpl._setOriginalVideoId = false;

		video_CategoryModelImpl._originalCategoryId = video_CategoryModelImpl._categoryId;

		video_CategoryModelImpl._setOriginalCategoryId = false;

		video_CategoryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Video_Category> toCacheModel() {
		Video_CategoryCacheModel video_CategoryCacheModel = new Video_CategoryCacheModel();

		video_CategoryCacheModel.videoCategoryId = getVideoCategoryId();

		video_CategoryCacheModel.videoId = getVideoId();

		video_CategoryCacheModel.categoryId = getCategoryId();

		return video_CategoryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{videoCategoryId=");
		sb.append(getVideoCategoryId());
		sb.append(", videoId=");
		sb.append(getVideoId());
		sb.append(", categoryId=");
		sb.append(getCategoryId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("de.uhh.l2g.plugins.model.Video_Category");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>videoCategoryId</column-name><column-value><![CDATA[");
		sb.append(getVideoCategoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>videoId</column-name><column-value><![CDATA[");
		sb.append(getVideoId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryId</column-name><column-value><![CDATA[");
		sb.append(getCategoryId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Video_Category.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Video_Category.class
		};
	private long _videoCategoryId;
	private long _videoId;
	private long _originalVideoId;
	private boolean _setOriginalVideoId;
	private long _categoryId;
	private long _originalCategoryId;
	private boolean _setOriginalCategoryId;
	private long _columnBitmask;
	private Video_Category _escapedModel;
}