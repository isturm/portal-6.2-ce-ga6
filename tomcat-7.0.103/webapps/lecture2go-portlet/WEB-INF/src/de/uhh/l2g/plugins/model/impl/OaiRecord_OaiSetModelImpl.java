/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.uhh.l2g.plugins.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.uhh.l2g.plugins.model.OaiRecord_OaiSet;
import de.uhh.l2g.plugins.model.OaiRecord_OaiSetModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the OaiRecord_OaiSet service. Represents a row in the &quot;LG_OaiRecord_OaiSet&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.uhh.l2g.plugins.model.OaiRecord_OaiSetModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link OaiRecord_OaiSetImpl}.
 * </p>
 *
 * @author Iavor Sturm
 * @see OaiRecord_OaiSetImpl
 * @see de.uhh.l2g.plugins.model.OaiRecord_OaiSet
 * @see de.uhh.l2g.plugins.model.OaiRecord_OaiSetModel
 * @generated
 */
public class OaiRecord_OaiSetModelImpl extends BaseModelImpl<OaiRecord_OaiSet>
	implements OaiRecord_OaiSetModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a oai record_ oai set model instance should use the {@link de.uhh.l2g.plugins.model.OaiRecord_OaiSet} interface instead.
	 */
	public static final String TABLE_NAME = "LG_OaiRecord_OaiSet";
	public static final Object[][] TABLE_COLUMNS = {
			{ "oaiRecordOaiSetId", Types.BIGINT },
			{ "oaiRecordId", Types.BIGINT },
			{ "oaiSetId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table LG_OaiRecord_OaiSet (oaiRecordOaiSetId LONG not null primary key,oaiRecordId LONG,oaiSetId LONG)";
	public static final String TABLE_SQL_DROP = "drop table LG_OaiRecord_OaiSet";
	public static final String ORDER_BY_JPQL = " ORDER BY oaiRecord_OaiSet.oaiRecordOaiSetId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LG_OaiRecord_OaiSet.oaiRecordOaiSetId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.de.uhh.l2g.plugins.model.OaiRecord_OaiSet"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.de.uhh.l2g.plugins.model.OaiRecord_OaiSet"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.de.uhh.l2g.plugins.model.OaiRecord_OaiSet"),
			true);
	public static long OAIRECORDID_COLUMN_BITMASK = 1L;
	public static long OAISETID_COLUMN_BITMASK = 2L;
	public static long OAIRECORDOAISETID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.de.uhh.l2g.plugins.model.OaiRecord_OaiSet"));

	public OaiRecord_OaiSetModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _oaiRecordOaiSetId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setOaiRecordOaiSetId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _oaiRecordOaiSetId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return OaiRecord_OaiSet.class;
	}

	@Override
	public String getModelClassName() {
		return OaiRecord_OaiSet.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("oaiRecordOaiSetId", getOaiRecordOaiSetId());
		attributes.put("oaiRecordId", getOaiRecordId());
		attributes.put("oaiSetId", getOaiSetId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long oaiRecordOaiSetId = (Long)attributes.get("oaiRecordOaiSetId");

		if (oaiRecordOaiSetId != null) {
			setOaiRecordOaiSetId(oaiRecordOaiSetId);
		}

		Long oaiRecordId = (Long)attributes.get("oaiRecordId");

		if (oaiRecordId != null) {
			setOaiRecordId(oaiRecordId);
		}

		Long oaiSetId = (Long)attributes.get("oaiSetId");

		if (oaiSetId != null) {
			setOaiSetId(oaiSetId);
		}
	}

	@Override
	public long getOaiRecordOaiSetId() {
		return _oaiRecordOaiSetId;
	}

	@Override
	public void setOaiRecordOaiSetId(long oaiRecordOaiSetId) {
		_oaiRecordOaiSetId = oaiRecordOaiSetId;
	}

	@Override
	public long getOaiRecordId() {
		return _oaiRecordId;
	}

	@Override
	public void setOaiRecordId(long oaiRecordId) {
		_columnBitmask |= OAIRECORDID_COLUMN_BITMASK;

		if (!_setOriginalOaiRecordId) {
			_setOriginalOaiRecordId = true;

			_originalOaiRecordId = _oaiRecordId;
		}

		_oaiRecordId = oaiRecordId;
	}

	public long getOriginalOaiRecordId() {
		return _originalOaiRecordId;
	}

	@Override
	public long getOaiSetId() {
		return _oaiSetId;
	}

	@Override
	public void setOaiSetId(long oaiSetId) {
		_columnBitmask |= OAISETID_COLUMN_BITMASK;

		if (!_setOriginalOaiSetId) {
			_setOriginalOaiSetId = true;

			_originalOaiSetId = _oaiSetId;
		}

		_oaiSetId = oaiSetId;
	}

	public long getOriginalOaiSetId() {
		return _originalOaiSetId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			OaiRecord_OaiSet.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public OaiRecord_OaiSet toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (OaiRecord_OaiSet)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		OaiRecord_OaiSetImpl oaiRecord_OaiSetImpl = new OaiRecord_OaiSetImpl();

		oaiRecord_OaiSetImpl.setOaiRecordOaiSetId(getOaiRecordOaiSetId());
		oaiRecord_OaiSetImpl.setOaiRecordId(getOaiRecordId());
		oaiRecord_OaiSetImpl.setOaiSetId(getOaiSetId());

		oaiRecord_OaiSetImpl.resetOriginalValues();

		return oaiRecord_OaiSetImpl;
	}

	@Override
	public int compareTo(OaiRecord_OaiSet oaiRecord_OaiSet) {
		long primaryKey = oaiRecord_OaiSet.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof OaiRecord_OaiSet)) {
			return false;
		}

		OaiRecord_OaiSet oaiRecord_OaiSet = (OaiRecord_OaiSet)obj;

		long primaryKey = oaiRecord_OaiSet.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		OaiRecord_OaiSetModelImpl oaiRecord_OaiSetModelImpl = this;

		oaiRecord_OaiSetModelImpl._originalOaiRecordId = oaiRecord_OaiSetModelImpl._oaiRecordId;

		oaiRecord_OaiSetModelImpl._setOriginalOaiRecordId = false;

		oaiRecord_OaiSetModelImpl._originalOaiSetId = oaiRecord_OaiSetModelImpl._oaiSetId;

		oaiRecord_OaiSetModelImpl._setOriginalOaiSetId = false;

		oaiRecord_OaiSetModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<OaiRecord_OaiSet> toCacheModel() {
		OaiRecord_OaiSetCacheModel oaiRecord_OaiSetCacheModel = new OaiRecord_OaiSetCacheModel();

		oaiRecord_OaiSetCacheModel.oaiRecordOaiSetId = getOaiRecordOaiSetId();

		oaiRecord_OaiSetCacheModel.oaiRecordId = getOaiRecordId();

		oaiRecord_OaiSetCacheModel.oaiSetId = getOaiSetId();

		return oaiRecord_OaiSetCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{oaiRecordOaiSetId=");
		sb.append(getOaiRecordOaiSetId());
		sb.append(", oaiRecordId=");
		sb.append(getOaiRecordId());
		sb.append(", oaiSetId=");
		sb.append(getOaiSetId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("de.uhh.l2g.plugins.model.OaiRecord_OaiSet");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>oaiRecordOaiSetId</column-name><column-value><![CDATA[");
		sb.append(getOaiRecordOaiSetId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oaiRecordId</column-name><column-value><![CDATA[");
		sb.append(getOaiRecordId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oaiSetId</column-name><column-value><![CDATA[");
		sb.append(getOaiSetId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = OaiRecord_OaiSet.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			OaiRecord_OaiSet.class
		};
	private long _oaiRecordOaiSetId;
	private long _oaiRecordId;
	private long _originalOaiRecordId;
	private boolean _setOriginalOaiRecordId;
	private long _oaiSetId;
	private long _originalOaiSetId;
	private boolean _setOriginalOaiSetId;
	private long _columnBitmask;
	private OaiRecord_OaiSet _escapedModel;
}