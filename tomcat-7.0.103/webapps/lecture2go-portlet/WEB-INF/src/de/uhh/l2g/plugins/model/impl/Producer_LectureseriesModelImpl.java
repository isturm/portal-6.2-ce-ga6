/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package de.uhh.l2g.plugins.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import de.uhh.l2g.plugins.model.Producer_Lectureseries;
import de.uhh.l2g.plugins.model.Producer_LectureseriesModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Producer_Lectureseries service. Represents a row in the &quot;LG_Producer_Lectureseries&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link de.uhh.l2g.plugins.model.Producer_LectureseriesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link Producer_LectureseriesImpl}.
 * </p>
 *
 * @author Iavor Sturm
 * @see Producer_LectureseriesImpl
 * @see de.uhh.l2g.plugins.model.Producer_Lectureseries
 * @see de.uhh.l2g.plugins.model.Producer_LectureseriesModel
 * @generated
 */
public class Producer_LectureseriesModelImpl extends BaseModelImpl<Producer_Lectureseries>
	implements Producer_LectureseriesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a producer_ lectureseries model instance should use the {@link de.uhh.l2g.plugins.model.Producer_Lectureseries} interface instead.
	 */
	public static final String TABLE_NAME = "LG_Producer_Lectureseries";
	public static final Object[][] TABLE_COLUMNS = {
			{ "producerLectureseriesId", Types.BIGINT },
			{ "lectureseriesId", Types.BIGINT },
			{ "producerId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table LG_Producer_Lectureseries (producerLectureseriesId LONG not null primary key,lectureseriesId LONG,producerId LONG)";
	public static final String TABLE_SQL_DROP = "drop table LG_Producer_Lectureseries";
	public static final String ORDER_BY_JPQL = " ORDER BY producer_Lectureseries.producerLectureseriesId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LG_Producer_Lectureseries.producerLectureseriesId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.de.uhh.l2g.plugins.model.Producer_Lectureseries"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.de.uhh.l2g.plugins.model.Producer_Lectureseries"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.de.uhh.l2g.plugins.model.Producer_Lectureseries"),
			true);
	public static long LECTURESERIESID_COLUMN_BITMASK = 1L;
	public static long PRODUCERID_COLUMN_BITMASK = 2L;
	public static long PRODUCERLECTURESERIESID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.de.uhh.l2g.plugins.model.Producer_Lectureseries"));

	public Producer_LectureseriesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _producerLectureseriesId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setProducerLectureseriesId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _producerLectureseriesId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Producer_Lectureseries.class;
	}

	@Override
	public String getModelClassName() {
		return Producer_Lectureseries.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("producerLectureseriesId", getProducerLectureseriesId());
		attributes.put("lectureseriesId", getLectureseriesId());
		attributes.put("producerId", getProducerId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long producerLectureseriesId = (Long)attributes.get(
				"producerLectureseriesId");

		if (producerLectureseriesId != null) {
			setProducerLectureseriesId(producerLectureseriesId);
		}

		Long lectureseriesId = (Long)attributes.get("lectureseriesId");

		if (lectureseriesId != null) {
			setLectureseriesId(lectureseriesId);
		}

		Long producerId = (Long)attributes.get("producerId");

		if (producerId != null) {
			setProducerId(producerId);
		}
	}

	@Override
	public long getProducerLectureseriesId() {
		return _producerLectureseriesId;
	}

	@Override
	public void setProducerLectureseriesId(long producerLectureseriesId) {
		_producerLectureseriesId = producerLectureseriesId;
	}

	@Override
	public long getLectureseriesId() {
		return _lectureseriesId;
	}

	@Override
	public void setLectureseriesId(long lectureseriesId) {
		_columnBitmask |= LECTURESERIESID_COLUMN_BITMASK;

		if (!_setOriginalLectureseriesId) {
			_setOriginalLectureseriesId = true;

			_originalLectureseriesId = _lectureseriesId;
		}

		_lectureseriesId = lectureseriesId;
	}

	public long getOriginalLectureseriesId() {
		return _originalLectureseriesId;
	}

	@Override
	public long getProducerId() {
		return _producerId;
	}

	@Override
	public void setProducerId(long producerId) {
		_columnBitmask |= PRODUCERID_COLUMN_BITMASK;

		if (!_setOriginalProducerId) {
			_setOriginalProducerId = true;

			_originalProducerId = _producerId;
		}

		_producerId = producerId;
	}

	public long getOriginalProducerId() {
		return _originalProducerId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Producer_Lectureseries.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Producer_Lectureseries toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Producer_Lectureseries)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		Producer_LectureseriesImpl producer_LectureseriesImpl = new Producer_LectureseriesImpl();

		producer_LectureseriesImpl.setProducerLectureseriesId(getProducerLectureseriesId());
		producer_LectureseriesImpl.setLectureseriesId(getLectureseriesId());
		producer_LectureseriesImpl.setProducerId(getProducerId());

		producer_LectureseriesImpl.resetOriginalValues();

		return producer_LectureseriesImpl;
	}

	@Override
	public int compareTo(Producer_Lectureseries producer_Lectureseries) {
		long primaryKey = producer_Lectureseries.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Producer_Lectureseries)) {
			return false;
		}

		Producer_Lectureseries producer_Lectureseries = (Producer_Lectureseries)obj;

		long primaryKey = producer_Lectureseries.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		Producer_LectureseriesModelImpl producer_LectureseriesModelImpl = this;

		producer_LectureseriesModelImpl._originalLectureseriesId = producer_LectureseriesModelImpl._lectureseriesId;

		producer_LectureseriesModelImpl._setOriginalLectureseriesId = false;

		producer_LectureseriesModelImpl._originalProducerId = producer_LectureseriesModelImpl._producerId;

		producer_LectureseriesModelImpl._setOriginalProducerId = false;

		producer_LectureseriesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Producer_Lectureseries> toCacheModel() {
		Producer_LectureseriesCacheModel producer_LectureseriesCacheModel = new Producer_LectureseriesCacheModel();

		producer_LectureseriesCacheModel.producerLectureseriesId = getProducerLectureseriesId();

		producer_LectureseriesCacheModel.lectureseriesId = getLectureseriesId();

		producer_LectureseriesCacheModel.producerId = getProducerId();

		return producer_LectureseriesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{producerLectureseriesId=");
		sb.append(getProducerLectureseriesId());
		sb.append(", lectureseriesId=");
		sb.append(getLectureseriesId());
		sb.append(", producerId=");
		sb.append(getProducerId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("de.uhh.l2g.plugins.model.Producer_Lectureseries");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>producerLectureseriesId</column-name><column-value><![CDATA[");
		sb.append(getProducerLectureseriesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lectureseriesId</column-name><column-value><![CDATA[");
		sb.append(getLectureseriesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>producerId</column-name><column-value><![CDATA[");
		sb.append(getProducerId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Producer_Lectureseries.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Producer_Lectureseries.class
		};
	private long _producerLectureseriesId;
	private long _lectureseriesId;
	private long _originalLectureseriesId;
	private boolean _setOriginalLectureseriesId;
	private long _producerId;
	private long _originalProducerId;
	private boolean _setOriginalProducerId;
	private long _columnBitmask;
	private Producer_Lectureseries _escapedModel;
}