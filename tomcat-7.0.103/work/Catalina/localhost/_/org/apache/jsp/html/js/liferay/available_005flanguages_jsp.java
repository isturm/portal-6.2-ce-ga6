/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.103
 * Generated at: 2020-07-02 13:18:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html.js.liferay;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.liferay.portal.kernel.language.LanguageUtil;
import com.liferay.portal.kernel.servlet.HttpHeaders;
import com.liferay.portal.kernel.util.ContentTypes;
import com.liferay.portal.kernel.util.LocaleUtil;
import java.util.Locale;

public final class available_005flanguages_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

response.addHeader(HttpHeaders.CONTENT_TYPE, ContentTypes.TEXT_JAVASCRIPT);

String languageId = LanguageUtil.getLanguageId(request);

Locale locale = LocaleUtil.fromLanguageId(languageId);

Locale[] locales = LanguageUtil.getAvailableLocales();

      out.write("\r\n");
      out.write("\r\n");
      out.write("AUI.add(\r\n");
      out.write("\t'portal-available-languages',\r\n");
      out.write("\tfunction(A) {\r\n");
      out.write("\t\tvar available = {};\r\n");
      out.write("\r\n");
      out.write("\t\tvar direction = {};\r\n");
      out.write("\r\n");
      out.write("\t\t");

		for (Locale curLocale : locales) {
			String selLanguageId = LocaleUtil.toLanguageId(curLocale);
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\tavailable['");
      out.print( selLanguageId );
      out.write("'] = '");
      out.print( curLocale.getDisplayName(locale) );
      out.write("';\r\n");
      out.write("\t\t\tdirection['");
      out.print( selLanguageId );
      out.write("'] = '");
      out.print( LanguageUtil.get(curLocale, "lang.dir") );
      out.write("';\r\n");
      out.write("\r\n");
      out.write("\t\t");

		}
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\tLiferay.Language.available = available;\r\n");
      out.write("\t\tLiferay.Language.direction = direction;\r\n");
      out.write("\t},\r\n");
      out.write("\t'',\r\n");
      out.write("\t{\r\n");
      out.write("\t\trequires: ['liferay-language']\r\n");
      out.write("\t}\r\n");
      out.write(");");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
